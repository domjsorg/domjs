{"version":3,"sources":["index.js","demos_base.js"],"names":["location","host","EventSource","onmessage","reload","window","demodom","components","mambo","develop","OUTPUT_PATH","AREAS","TYPES","demotools","manager","route","name","path","action","forEach","area","clearArea","createHTMLbase","html","parser","DOMParser","parseFromString","document","body","prepend","firstChild","showComponentsList","sidebar","getElementById","list","createElement","component","item","innerText","onclick","tools","router","push","toLowerCase","appendChild","runComponent","id","custom","type","option","hidrateArea","object","div","applyScript","applyDesc","applyCode","zone","innerHTML","script","eval","desc","code","printCodes","map","comment","join","addRoutes","routes"],"mappings":"AAAsB,mBAAlBA,SAASC,OACF,IAAIC,YAAY,yBAAyBC,UAAY,IAAMH,SAASI,UAGvEC,OAAOC,QAAU,GACjBD,OAAOC,QAAQC,WAAa,GCLpCC,MAAAC,SAAA,EAEA,MAAAC,YAAA,QACAC,MAAA,CAAA,OAAA,YAAA,aACAC,MAAA,CAAA,SAAA,cAAA,QAEAP,OAAAQ,UAAAC,QAAA,CACAC,MAAA,CACAC,KAAA,cACAC,KAAAP,YACAQ,OAAA,KACAP,MAAAQ,SAAAC,IACAP,UAAAC,QAAAO,UAAAD,QAIAE,eAAA,WACA,MAAAC,EAAA,sPAQAZ,MAAA,sIAIAA,MAAA,iFAEAA,MAAA,uFAKA,IAAAa,GAAA,IAAAC,WAAAC,gBAAAH,EAAA,aACAI,SAAAC,KAAAC,QAAAL,EAAAI,KAAAE,aAEAC,mBAAAxB,IACA,IAAAyB,EAAAL,SAAAM,eAAA,WACAC,EAAAP,SAAAQ,cAAA,MAEA5B,EAAAY,SAAAiB,IACA,IAAAC,EAAAV,SAAAQ,cAAA,MACAE,EAAAC,UAAAF,EAAApB,KACAqB,EAAAE,QAAA,KACAC,MAAAC,OAAAC,KAAA,CAAAzB,KAAA,GAAAP,eAAA0B,EAAApB,KAAA2B,mBAEAT,EAAAU,YAAAP,MAGAL,EAAAY,YAAAV,IAEAW,aAAAT,IAEA,CACA,CAAAhB,KAAAT,MAAA,GAAAyB,UAAAA,EAAAU,GAAAV,EAAAW,OAAAC,KAAApC,MAAA,IACA,CAAAQ,KAAAT,MAAA,GAAAyB,UAAAA,EAAAU,GAAA,GAAAV,EAAAW,cAAAC,KAAApC,MAAA,IACA,CAAAQ,KAAAT,MAAA,GAAAyB,UAAAA,EAAAU,GAAA,GAAAV,EAAAW,cAAAC,KAAApC,MAAA,KAGAO,SAAA8B,IACApC,UAAAC,QAAAoC,YAAAD,OAIAC,YAAAC,IAEA,IAAA/B,EAAAO,SAAAM,eAAAkB,EAAA/B,MACAgC,EAAAzB,SAAAQ,cAAA,OAMA,OALAiB,EAAAN,GAAAK,EAAAL,GAEAjC,UAAAC,QAAAO,UAAA8B,EAAA/B,MACAA,EAAAwB,YAAAQ,GAEAD,EAAAH,MACA,KAAApC,MAAA,GACAC,UAAAC,QAAAuC,YAAAF,EAAAf,UAAAe,EAAAH,MAAAG,EAAAL,IACA,MAEA,KAAAlC,MAAA,GACAC,UAAAC,QAAAwC,UAAAH,EAAAf,UAAAe,EAAAH,MAAAG,EAAAL,IACA,MAEA,KAAAlC,MAAA,GACAC,UAAAC,QAAAyC,UAAAJ,EAAAf,UAAAe,EAAAH,MAAAG,EAAAL,MAKAzB,UAAAmC,IACA7B,SAAAM,eAAAuB,GACAC,UAAA,IAEAJ,YAAA,CAAAK,OAAAX,UACAY,KAAAD,SAEAJ,UAAA,CAAAM,EAAAb,KACApB,SAAAM,eAAAc,GACAU,UAAAG,GAEAL,UAAA,CAAAM,EAAAd,KACA,GAAA,OAAAc,EAAA,CACA,IAAAzC,EAAAO,SAAAM,eAAAc,GAEAe,EAAAD,EAAAE,KAAAF,GACA,OAAAA,EAAAG,oBAAAH,EAAAH,iBAGAtC,EAAAqC,UAAAK,EAAAG,KAAA,MAGAC,UAAA3D,IACA,IAAA4D,EAAA5D,EAAAwD,KAAA3B,IACA,CACApB,KAAAoB,EAAApB,KACAC,KAAA,GAAAP,eAAA0B,EAAApB,KAAA2B,gBACAzB,OAAA,KAAAL,UAAAC,QAAA+B,aAAAT,QAIA+B,EAAAzB,KAAA7B,UAAAC,QAAAC,OAEAyB,MAAAC,OAAA0B,OAAAA,KAIAtD,UAAAC,QAAAQ,iBAEAT,UAAAC,QAAAiB,mBAAAlB,UAAAN,YAEAM,UAAAC,QAAAoD,UAAArD,UAAAN","file":"index.js","sourcesContent":[null,"mambo.develop = true\n\nconst OUTPUT_PATH = '/demo';\nconst AREAS = ['area', 'area-desc', 'area-code'];\nconst TYPES = ['script', 'description', 'code'];\n\nwindow.demotools.manager = {\n    route: {\n        name: 'DOMHomeDemo',\n        path: OUTPUT_PATH,\n        action: () => {\n            AREAS.forEach(area => {\n                demotools.manager.clearArea(area)\n            });\n        }\n    },\n    createHTMLbase: function() {\n        const html = `\n        <div id=\"app\">\n            <div id=\"sidebar\">\n                Lista de componentes\n            </div>\n            <div id=\"main\">\n                <section>\n                    <h3>Descripcion</h3>\n                    <div id=\"${AREAS[1]}\"></div>\n                </section>\n                <section>\n                    <h3>Demo</h3>\n                    <div id=\"${AREAS[0]}\"></div>\n                    <h3>Codigo</h3>\n                    <div id=\"${AREAS[2]}\"></div>\n                </section>\n            </div>\n        </div>\n        `;\n        let parser = new DOMParser().parseFromString(html, 'text/html');\n        document.body.prepend(parser.body.firstChild);\n    },\n    showComponentsList: (components) => {\n        let sidebar = document.getElementById('sidebar');\n        let list = document.createElement('ul');\n\n        components.forEach(component => {\n            let item = document.createElement('li');\n            item.innerText = component.name;\n            item.onclick = () => { \n                tools.router.push({ path: `${OUTPUT_PATH}/${component.name.toLowerCase()}` });\n            }\n            list.appendChild(item);\n        })\n\n        sidebar.appendChild(list);\n    },\n    runComponent: (component) => {\n\n        const options = [\n            { area: AREAS[0], component, id: component.custom, type: TYPES[0] },\n            { area: AREAS[1], component, id: `${component.custom}-desc`, type: TYPES[1] },\n            { area: AREAS[2], component, id: `${component.custom}-code`, type: TYPES[2] }\n        ]\n\n        options.forEach(option => {\n            demotools.manager.hidrateArea(option);\n        })\n        \n    },\n    hidrateArea: (object) => {\n\n        let area = document.getElementById(object.area);\n        let div = document.createElement('div');\n        div.id = object.id;\n\n        demotools.manager.clearArea(object.area);\n        area.appendChild(div);\n\n        switch (object.type) {\n            case TYPES[0]:\n                demotools.manager.applyScript(object.component[object.type], object.id);\n                break;\n        \n            case TYPES[1]:\n                demotools.manager.applyDesc(object.component[object.type], object.id);\n                break;\n            \n            case TYPES[2]:\n                demotools.manager.applyCode(object.component[object.type], object.id);\n                break;\n        }\n        \n    },\n    clearArea: (zone) => {\n        let area = document.getElementById(zone);\n        area.innerHTML = '';\n    },\n    applyScript: (script, custom) => {\n        eval(script);\n    },\n    applyDesc: (desc, custom) => {\n        let area = document.getElementById(custom);\n        area.innerHTML = desc;\n    },\n    applyCode: (code, custom) => {\n        if (null !== code) {\n            let area = document.getElementById(custom);\n            \n            let printCodes = code.map(code => {\n                return `<h4>${code.comment}</h4><pre>${code.script}</pre>`;\n            })\n\n            area.innerHTML = printCodes.join('');\n        }\n    },\n    addRoutes: (components) => {\n        let routes = components.map(component => {\n            return {\n                name: component.name,\n                path: `${OUTPUT_PATH}/${component.name.toLowerCase()}`,\n                action: () => { demotools.manager.runComponent(component); }\n            }\n        })\n\n        routes.push(demotools.manager.route);\n    \n        tools.router.routes(routes);\n    }\n}\n\ndemotools.manager.createHTMLbase();\n\ndemotools.manager.showComponentsList(demotools.components);\n\ndemotools.manager.addRoutes(demotools.components);"]}